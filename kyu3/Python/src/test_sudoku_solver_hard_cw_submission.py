"""Tests for https://www.codewars.com/kata/hard-sudoku-solver."""

import pytest
from math import sqrt
from operator import itemgetter

base = [
    [5, 3, 4, 6, 7, 8, 9, 1, 2],
    [6, 7, 2, 1, 9, 5, 3, 4, 8],
    [1, 9, 8, 3, 4, 2, 5, 6, 7],
    [8, 5, 9, 7, 6, 1, 4, 2, 3],
    [4, 2, 6, 8, 5, 3, 7, 9, 1],
    [7, 1, 3, 9, 2, 4, 8, 5, 6],
    [9, 6, 1, 5, 3, 7, 2, 8, 4],
    [2, 8, 7, 4, 1, 9, 6, 3, 5],
    [3, 4, 5, 2, 8, 6, 1, 7, 9]
    ]

brute_force = [
    [5, 0, 0, 7, 9, 0, 0, 0, 8],
    [0, 6, 0, 0, 1, 0, 0, 7, 0],
    [0, 0, 0, 5, 6, 2, 0, 0, 0],
    [0, 9, 4, 6, 8, 7, 1, 0, 0],
    [7, 1, 0, 9, 3, 5, 0, 4, 6],
    [6, 0, 5, 4, 2, 1, 9, 0, 7],
    [0, 0, 0, 1, 5, 6, 0, 0, 0],
    [0, 5, 0, 0, 4, 9, 0, 2, 0],
    [9, 0, 0, 2, 7, 0, 0, 0, 4]
]

fiendish = [
    [3, 0, 5, 0, 2, 0, 7, 0, 1],
    [0, 0, 0, 8, 0, 3, 0, 0, 2],
    [0, 6, 0, 0, 0, 5, 0, 0, 0],
    [0, 7, 1, 0, 0, 0, 0, 5, 0],
    [0, 0, 6, 0, 0, 0, 9, 0, 0],
    [0, 9, 0, 0, 0, 0, 4, 2, 0],
    [0, 0, 0, 6, 0, 0, 0, 9, 0],
    [9, 0, 0, 0, 0, 4, 0, 0, 5],
    [6, 0, 8, 0, 3, 0, 2, 0, 4]
    ]

unsolvable = [
    [5, 2, 0, 7, 9, 4, 3, 0, 8],
    [4, 6, 0, 3, 1, 8, 5, 7, 0],
    [0, 0, 0, 5, 6, 2, 4, 0, 0],
    [0, 9, 4, 6, 8, 7, 1, 0, 0],
    [7, 1, 0, 9, 3, 5, 2, 4, 6],
    [6, 3, 5, 4, 2, 1, 9, 8, 7],
    [0, 0, 0, 1, 5, 6, 8, 0, 0],
    [0, 5, 0, 8, 4, 9, 7, 2, 0],
    [9, 8, 1, 2, 7, 3, 6, 0, 4]
]

hard_1 = [
    [0, 0, 0, 2, 0, 0, 0, 6, 3],
    [3, 0, 0, 0, 0, 5, 4, 0, 1],
    [0, 0, 1, 0, 0, 3, 9, 8, 0],
    [0, 0, 0, 0, 0, 0, 0, 9, 0],
    [0, 0, 0, 5, 3, 8, 0, 0, 0],
    [0, 3, 0, 0, 0, 0, 0, 0, 0],
    [0, 2, 6, 3, 0, 0, 5, 0, 0],
    [5, 0, 3, 7, 0, 0, 0, 0, 8],
    [4, 7, 0, 0, 0, 1, 0, 0, 0],
]

hard_2 = [
    [0, 1, 0, 0, 0, 4, 0, 0, 0],
    [0, 0, 6, 8, 0, 5, 0, 0, 1],
    [5, 0, 3, 7, 0, 1, 9, 0, 0],
    [8, 0, 4, 0, 0, 7, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 3, 0, 0, 6, 0, 9],
    [0, 0, 1, 5, 0, 8, 2, 0, 4],
    [6, 0, 0, 4, 0, 3, 1, 0, 0],
    [0, 0, 0, 2, 0, 0, 0, 5, 0],
]

expert = [
    [0, 0, 6, 0, 0, 0, 0, 0, 4],
    [0, 0, 0, 8, 6, 0, 7, 3, 0],
    [0, 4, 0, 3, 5, 0, 0, 0, 2],
    [1, 7, 0, 4, 0, 0, 6, 0, 0],
    [0, 9, 0, 0, 0, 0, 0, 8, 0],
    [0, 0, 8, 0, 0, 6, 0, 1, 7],
    [2, 0, 0, 0, 8, 1, 0, 4, 0],
    [0, 6, 7, 0, 4, 3, 0, 0, 0],
    [8, 0, 0, 0, 0, 0, 3, 0, 0],
]

extreme = [
    [0, 0, 9, 7, 4, 8, 0, 0, 0],
    [7, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 2, 0, 1, 0, 9, 0, 0, 0],
    [0, 0, 7, 0, 0, 0, 2, 4, 0],
    [0, 6, 4, 0, 1, 0, 5, 9, 0],
    [0, 9, 8, 0, 0, 0, 3, 0, 0],
    [0, 0, 0, 8, 0, 3, 0, 2, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 2, 7, 5, 9, 0, 0],
]

diabolical = [
    [3, 6, 0, 0, 0, 0, 1, 7, 0],
    [0, 1, 4, 7, 0, 0, 0, 0, 0],
    [0, 0, 7, 0, 8, 0, 0, 0, 0],
    [0, 0, 1, 2, 0, 6, 0, 0, 5],
    [9, 0, 0, 0, 0, 0, 0, 0, 4],
    [4, 0, 0, 5, 0, 8, 3, 0, 0],
    [0, 0, 0, 0, 5, 0, 2, 0, 0],
    [0, 0, 0, 0, 0, 7, 4, 3, 0],
    [0, 4, 9, 0, 0, 0, 0, 5, 6],
]

tdd_cw = [
    [9, 0, 0, 0, 8, 0, 0, 0, 1],
    [0, 0, 0, 4, 0, 6, 0, 0, 0],
    [0, 0, 5, 0, 7, 0, 3, 0, 0],
    [0, 6, 0, 0, 0, 0, 0, 4, 0],
    [4, 0, 1, 0, 6, 0, 5, 0, 8],
    [0, 9, 0, 0, 0, 0, 0, 2, 0],
    [0, 0, 7, 0, 3, 0, 2, 0, 0],
    [0, 0, 0, 7, 0, 5, 0, 0, 0],
    [1, 0, 0, 0, 4, 0, 0, 0, 7]
    ]


TEST_SUDOKUS = [
    (brute_force, True),
    (hard_1, True),
    (hard_2, True),
    (expert, True),
    (extreme, True),
    (fiendish, True),
    (diabolical, True),
    (tdd_cw, True),
]


@pytest.mark.parametrize('m, result', TEST_SUDOKUS)
def test_solver_combo_approach_benchmark(m, result):
    """
    Test that function solver can solve a given sudoku of any difficulty correctly using a mix of traditional solving techniques and
    brute force.
    """
    from sudoku_solver_hard_cw_submission import solver, valid
    from copy import deepcopy
    brute_m = deepcopy(m)
    solved_sudoku = solver(brute_m)
    assert valid(solved_sudoku) == result
    